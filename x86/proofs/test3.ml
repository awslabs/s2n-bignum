needs "x86/proofs/base.ml";;

loadt "x86/proofs/simulator.ml";;

let ibyteterm = `[(word 88):byte; word 80]`;;
let execth = X86_MK_EXEC_RULE(REFL ibyteterm);;

let goal =
`nonoverlapping (word pc,LENGTH [word 88; word 80]) (stackpointer,256)
==> ensures x86
    (\s.
         bytes_loaded s (word pc) [word 88; word 80] /\
         read RIP s = word pc /\
         read RSP s = stackpointer /\
         regfile s =
         [409911703939172; 8008121625210311414; 2613214508491310080;
          11395989609145728012; 148; 9520965871346147652;
          13925323965880615018; 2620397979865985569; 5047438316441537029;
          594835967057202552; 74310639929213125; 4973972900938001452;
          5484698328191362589; 1562858199447212296; 5234324319133886979;
          2563202208480890952; 10175053157634629; 363109661870852176;
          4626885780189495684; 2343183837146986104; 7593632892564836912;
          4220489138002133505; 76625012588810316; 8836911602474729476;
          563099203555716; 10593192004235233153; 146648973968949792;
          12610360449890534917; 11534205229267180417; 10386022643660482722;
          662083327336178338; 14998119570190895112; 9229155056783600100;
          160209979635681288; 4634246906244501648; 618167534742411776;
          4684948712120665625; 2474732946280586009; 10525159221400978208;
          9329213259943821862; 295064498115719184; 6238699696959868938;
          9872277467201737026; 13979230430990714888; 9077659830337780;
          5208502106805519520; 9450887751655228957; 2455238204597494506;
          2600832499290751011; 8503082027230436358; 644054508523508752;
          16178289141759873349; 2140336204036581644; 4039729588684325440;
          10669590748466348297; 9529899533997240482; 1153242699596366372;
          7061704835228048293; 936752452940948496; 1298163802730828812;
          5513096600232314112; 17306946908639498504; 2314870016908017924;
          16144850727159013665; 6989595436831293953; 4231142342520422804;
          363140129123205205; 8211631811524825348; 16437437744189719602;
          1693523388870673; 6818538046285153668; 290499912587835456;
          7516584125424475378; 4625234204060950791; 6935613846637903896;
          6346284564926718096; 1787947025307021452; 85904568676387592;
          2164015141476002324; 38282527454533912; 5764895612866724144;
          104709157389124678; 9367522692863661396; 4616568125882964006;
          9386912389620859904; 1805099028104921283; 589166777424204440;
          4901025389536885860; 9548143651738091536; 1165435321694957577;
          16227894519146749960; 14668803434413555876; 604625982382459592;
          2378613181284552708; 12216791619382478008; 3459472689511801897;
          7201986503309267201; 5533095912431636367; 3706702187878248135;
          1153695988196611074; 6993677118787330304; 9530252545394868328;
          1189041217535806088; 7571949718830910594; 2559170597804313611;
          613689695811141636; 6971933655290620329; 7872393555108446726;
          7170435394730750210; 6936107632719130694; 73786168889819142;
          9227328235585418017])
    (\s.
         read RSP s = stackpointer /\
         regfile s =
         [5764895612866724144; 8008121625210311414; 2613214508491310080;
          11395989609145728012; 148; 9520965871346147652;
          13925323965880615018; 2620397979865985569; 5047438316441537029;
          594835967057202552; 74310639929213125; 4973972900938001452;
          5484698328191362589; 1562858199447212296; 5234324319133886979;
          2563202208480890952; 10175053157634629; 363109661870852176;
          4626885780189495684; 2343183837146986104; 7593632892564836912;
          4220489138002133505; 76625012588810316; 8836911602474729476;
          563099203555716; 10593192004235233153; 146648973968949792;
          12610360449890534917; 11534205229267180417; 10386022643660482722;
          662083327336178338; 14998119570190895112; 9229155056783600100;
          160209979635681288; 4634246906244501648; 618167534742411776;
          4684948712120665625; 2474732946280586009; 10525159221400978208;
          9329213259943821862; 295064498115719184; 6238699696959868938;
          9872277467201737026; 13979230430990714888; 9077659830337780;
          5208502106805519520; 9450887751655228957; 2455238204597494506;
          2600832499290751011; 8503082027230436358; 644054508523508752;
          16178289141759873349; 2140336204036581644; 4039729588684325440;
          10669590748466348297; 9529899533997240482; 1153242699596366372;
          7061704835228048293; 936752452940948496; 1298163802730828812;
          5513096600232314112; 17306946908639498504; 2314870016908017924;
          16144850727159013665; 6989595436831293953; 4231142342520422804;
          363140129123205205; 8211631811524825348; 16437437744189719602;
          1693523388870673; 6818538046285153668; 290499912587835456;
          7516584125424475378; 4625234204060950791; 6935613846637903896;
          6346284564926718096; 1787947025307021452; 85904568676387592;
          2164015141476002324; 38282527454533912; 5764895612866724144;
          104709157389124678; 9367522692863661396; 4616568125882964006;
          9386912389620859904; 1805099028104921283; 589166777424204440;
          4901025389536885860; 9548143651738091536; 1165435321694957577;
          16227894519146749960; 14668803434413555876; 604625982382459592;
          2378613181284552708; 12216791619382478008; 3459472689511801897;
          7201986503309267201; 5533095912431636367; 3706702187878248135;
          1153695988196611074; 6993677118787330304; 9530252545394868328;
          1189041217535806088; 7571949718830910594; 2559170597804313611;
          613689695811141636; 6971933655290620329; 7872393555108446726;
          7170435394730750210; 6936107632719130694; 73786168889819142;
          9227328235585418017])
    (MAYCHANGE
     [RIP; RSP; RAX; RCX; RDX; RBX; RBP; RSI; RDI; R8; R9; R10; R11; R12;
      R13; R14; R15] ,,
     MAYCHANGE
     [ZMM0; ZMM1; ZMM2; ZMM3; ZMM4; ZMM5; ZMM6; ZMM7; ZMM8; ZMM9; ZMM10;
      ZMM11; ZMM12; ZMM13; ZMM14; ZMM15] ,,
     MAYCHANGE [memory :> bytes (stackpointer,256)] ,,
     MAYCHANGE SOME_FLAGS)`;;

let result =
    match
     (PURE_REWRITE_TAC [fst execth] THEN

     REWRITE_TAC[NONOVERLAPPING_CLAUSES] THEN STRIP_TAC THEN
     REWRITE_TAC[regfile; CONS_11; FLAGENCODING_11; VAL_WORD_GALOIS] THEN
     REWRITE_TAC[DIMINDEX_64; DIMINDEX_128] THEN CONV_TAC NUM_REDUCE_CONV THEN
     REWRITE_TAC[YMMENCODING_REGROUP] THEN CONV_TAC(DEPTH_CONV WORD_JOIN_CONV) THEN
     REWRITE_TAC[SOME_FLAGS] THEN ONCE_REWRITE_TAC[MESON[]
      `read RSP s = stackpointer /\ P (read RSP s) s <=>
       read RSP s = stackpointer /\ P stackpointer s`] THEN
     ENSURES_INIT_TAC "s0" THEN
     MAP_EVERY MEMORY_SPLIT_TAC (1--4) THEN

     X86_VSTEPS_TAC execth (1--length [1;2]) THEN

     MAP_EVERY MEMORY_SPLIT_TAC (0--4) THEN
     ENSURES_FINAL_STATE_TAC THEN ASM_REWRITE_TAC[] THEN
     CONV_TAC(ONCE_DEPTH_CONV READ_MEMORY_MERGE_CONV) THEN
     ASM_REWRITE_TAC[] THEN extra_simp_tac THEN
     PRINT_GOAL_TAC THEN ALL_TAC)
     ([],goal)
  with
    _,[_,endres],_ ->
  (if endres = `T` || only_undefinedness endres then
     let _ = print_string "I'm here" in
     let _ = print_term endres in
     (Format.print_string "Modulo undefinedness "; 1)
   else
     let _ = print_string "I'm here2" in
     let _ = print_term endres in
     let _,[_,gsd],_ =
      (REWRITE_TAC[regfile; CONS_11; FLAGENCODING_11; VAL_WORD_GALOIS] THEN
       REWRITE_TAC[DIMINDEX_64; DIMINDEX_128] THEN CONV_TAC NUM_REDUCE_CONV THEN
       REWRITE_TAC[SOME_FLAGS]) ([],goal) in
      (print_qterm gsd; Format.print_newline(); 0))
  | _,[],_ -> 1 in
let _ = print_int result in
result